{"id":"../src/index.js","dependencies":[{"name":"/Users/dodge/Desktop/MySource/axios-dev-pandaren/package.json","includedInParent":true,"mtime":1626688429851},{"name":"regenerator-runtime/runtime","loc":{"line":1,"column":7},"parent":"/Users/dodge/Desktop/MySource/axios-dev-pandaren/src/index.js","resolved":"/Users/dodge/Desktop/MySource/axios-dev-pandaren/node_modules/regenerator-runtime/runtime.js"},{"name":"./constants/api","loc":{"line":2,"column":36},"parent":"/Users/dodge/Desktop/MySource/axios-dev-pandaren/src/index.js","resolved":"/Users/dodge/Desktop/MySource/axios-dev-pandaren/src/constants/api.js"},{"name":"./utils/getDataApi","loc":{"line":3,"column":27},"parent":"/Users/dodge/Desktop/MySource/axios-dev-pandaren/src/index.js","resolved":"/Users/dodge/Desktop/MySource/axios-dev-pandaren/src/utils/getDataApi.js"}],"generated":{"js":"\"use strict\";\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _api = require(\"./constants/api\");\n\nvar _getDataApi = require(\"./utils/getDataApi\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n  var data;\n  return regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _getDataApi.getDataApi.getData(_api.API_URL + _api.URL_COMICS);\n\n        case 2:\n          data = _context.sent;\n          console.log(data);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}))();"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"../src/index.js","original":{"line":1,"column":0}},{"generated":{"line":5,"column":0},"source":"../src/index.js","original":{"line":2,"column":0}},{"generated":{"line":7,"column":0},"source":"../src/index.js","original":{"line":3,"column":0}},{"generated":{"line":13,"column":0},"source":"../src/index.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":56},"source":"../src/index.js","original":{"line":5,"column":1}},{"generated":{"line":14,"column":0},"source":"../src/index.js","original":{"line":5,"column":1}},{"generated":{"line":15,"column":0},"source":"../src/index.js","original":{"line":5,"column":1}},{"generated":{"line":16,"column":0},"source":"../src/index.js","original":{"line":5,"column":1}},{"generated":{"line":17,"column":0},"source":"../src/index.js","original":{"line":5,"column":1}},{"generated":{"line":18,"column":0},"source":"../src/index.js","original":{"line":5,"column":1}},{"generated":{"line":19,"column":0},"source":"../src/index.js","original":{"line":5,"column":1}},{"generated":{"line":20,"column":0},"source":"../src/index.js","original":{"line":5,"column":1}},{"name":"getDataApi","generated":{"line":20,"column":17},"source":"../src/index.js","original":{"line":6,"column":21}},{"name":"getData","generated":{"line":20,"column":40},"source":"../src/index.js","original":{"line":6,"column":32}},{"generated":{"line":20,"column":47},"source":"../src/index.js","original":{"line":6,"column":21}},{"name":"API_URL","generated":{"line":20,"column":48},"source":"../src/index.js","original":{"line":6,"column":40}},{"name":"URL_COMICS","generated":{"line":20,"column":63},"source":"../src/index.js","original":{"line":6,"column":50}},{"generated":{"line":20,"column":78},"source":"../src/index.js","original":{"line":6,"column":21}},{"generated":{"line":20,"column":79},"source":"../src/index.js","original":{"line":5,"column":1}},{"generated":{"line":22,"column":0},"source":"../src/index.js","original":{"line":5,"column":1}},{"name":"data","generated":{"line":23,"column":0},"source":"../src/index.js","original":{"line":6,"column":8}},{"name":"data","generated":{"line":23,"column":10},"source":"../src/index.js","original":{"line":6,"column":8}},{"generated":{"line":23,"column":14},"source":"../src/index.js","original":{"line":5,"column":1}},{"name":"console","generated":{"line":24,"column":0},"source":"../src/index.js","original":{"line":7,"column":2}},{"name":"console","generated":{"line":24,"column":10},"source":"../src/index.js","original":{"line":7,"column":2}},{"generated":{"line":24,"column":17},"source":"../src/index.js","original":{"line":7,"column":9}},{"name":"log","generated":{"line":24,"column":18},"source":"../src/index.js","original":{"line":7,"column":10}},{"generated":{"line":24,"column":21},"source":"../src/index.js","original":{"line":7,"column":2}},{"name":"data","generated":{"line":24,"column":22},"source":"../src/index.js","original":{"line":7,"column":14}},{"generated":{"line":24,"column":26},"source":"../src/index.js","original":{"line":7,"column":2}},{"generated":{"line":26,"column":0},"source":"../src/index.js","original":{"line":5,"column":1}},{"generated":{"line":27,"column":0},"source":"../src/index.js","original":{"line":5,"column":1}},{"generated":{"line":28,"column":0},"source":"../src/index.js","original":{"line":5,"column":1}},{"generated":{"line":29,"column":0},"source":"../src/index.js","original":{"line":5,"column":1}},{"generated":{"line":30,"column":0},"source":"../src/index.js","original":{"line":5,"column":1}},{"generated":{"line":31,"column":0},"source":"../src/index.js","original":{"line":5,"column":1}},{"generated":{"line":32,"column":0},"source":"../src/index.js","original":{"line":5,"column":1}},{"generated":{"line":32,"column":1},"source":"../src/index.js","original":{"line":5,"column":0}}],"sources":{"../src/index.js":"import 'regenerator-runtime/runtime';\nimport { API_URL, URL_COMICS } from './constants/api';\nimport { getDataApi } from './utils/getDataApi';\n\n(async () => {\n  const data = await getDataApi.getData(API_URL + URL_COMICS);\n  console.log(data);\n})();\n"},"lineCount":null}},"error":null,"hash":"fe3600c21557d887b24d742e7558c87b","cacheData":{"env":{}}}